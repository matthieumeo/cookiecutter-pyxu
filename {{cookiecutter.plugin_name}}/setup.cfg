[metadata]
name = {{cookiecutter.plugin_name}}
{% if cookiecutter.use_git_tags_for_versioning != 'y' -%}
version = attr: {{cookiecutter.module_name}}.__version__
{%- endif %}
description = {{cookiecutter.short_description}}
long_description = file: README.md
long_description_content_type = text/markdown
{% if cookiecutter.github_repository_url != 'provide later' -%}
url = {{ cookiecutter.github_repository_url }}
{%- endif %}
author = {{cookiecutter.full_name}}
author_email = {{cookiecutter.email}}
{% if cookiecutter.license == "MIT" -%}
license = {{cookiecutter.license}}
{%- elif cookiecutter.license == "BSD-3" -%}
license = BSD-3-Clause
{%- elif cookiecutter.license == "GNU GPL v3.0" -%}
license = GPL-3.0-only
{%- elif cookiecutter.license == "GNU LGPL v3.0" -%}
license = LGPL-3.0-only
{%- elif cookiecutter.license == "Apache Software License 2.0" -%}
license = Apache-2.0
{%- elif cookiecutter.license == "Mozilla Public License 2.0" -%}
license = MPL-2.0
{%- endif %}
license_files = LICENSE
classifiers =
    Framework :: Pycsou
    Development Status :: 1 - Planning
    Intended Audience :: Science/Research
    {% if cookiecutter.license == "MIT" -%}
    License :: OSI Approved :: MIT License
    {%- elif cookiecutter.license == "BSD-3" -%}
    License :: OSI Approved :: BSD License
    {%- elif cookiecutter.license == "GNU GPL v3.0" -%}
    License :: OSI Approved :: GNU General Public License v3 (GPLv3)
    {%- elif cookiecutter.license == "GNU LGPL v3.0" -%}
    License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)
    {%- elif cookiecutter.license == "Apache Software License 2.0" -%}
    License :: OSI Approved :: Apache Software License
    {%- elif cookiecutter.license == "Mozilla Public License 2.0" -%}
    License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)
    {%- endif %}
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Scientific/Engineering :: Image Processing
{% if cookiecutter.github_repository_url != 'provide later' -%}
project_urls =
    Bug Tracker = https://github.com/{{cookiecutter.github_username_or_organization}}/{{cookiecutter.plugin_name}}/issues
    Documentation = https://github.com/{{cookiecutter.github_username_or_organization}}/{{cookiecutter.plugin_name}}#README.md
    Source Code = https://github.com/{{cookiecutter.github_username_or_organization}}/{{cookiecutter.plugin_name}}
    User Support = https://github.com/{{cookiecutter.github_username_or_organization}}/{{cookiecutter.plugin_name}}/issues
{%- endif %}

# add your package requirements here
[options]
install_requires =
    pyxu
python_requires = >= 3.10, < 3.12
include_package_data = True
package_dir =
    = src
{% if cookiecutter.use_git_tags_for_versioning == 'y' -%}
setup_requires = setuptools_scm
{%- endif %}

# Note the `_` underscore to overload a base Pyxu class.
[options.entry_points]
{% if cookiecutter.include_math_plugin == 'y' -%}
pyxu.math =
    eigh = {{cookiecutter.module_name}}:eigh
{% endif %}{% if cookiecutter.include_operator_plugin == 'y' -%}
pyxu.operator =
    Flip = {{cookiecutter.module_name}}:Flip
    _NullFunc = {{cookiecutter.module_name}}:NullFunc
{% endif %}{% if cookiecutter.include_solver_plugin == 'y' -%}
pyxu.solver =
    GradientDescent = {{cookiecutter.module_name}}:GradientDescent
{% endif %}{% if cookiecutter.include_stop_plugin == 'y' -%}
pyxu.stop =
    Deadline = {{cookiecutter.module_name}}:Deadline
{% endif %}


[options.extras_require]
dev =
	graphviz >= 0.20, < 1
	ipython >= 8.14, < 9
	pre-commit >= 3.3, < 4
	pytest >= 7.4, < 8
    pytest-cov
	sphinx >= 7.2, < 8
	tox >= 4.6, < 5
	matplotlib >= 3.7, < 4
	scikit-image >= 0.21, < 1
	pydata_sphinx_theme >= 0.13, < 1
	sphinx_design >= 0.4.1, < 1
	sphinx_copybutton >= 0.5.2, < 1
	sphinx_codeautolink >= 0.15.0, < 1
	sphinx_togglebutton >= 0.3.2, < 1
_gpu =
	nvidia-pyindex
	cupy-cuda12x
	cutensor-cu12
	nvidia-cudnn-cu12
	nvidia-cusparse-cu12
	nvidia-nccl-cu12
fft =
	finufft >= 2.1, < 3
fft_gpu =
	nvidia-cufft-cu12

[flake8]
max-complexity = 10
exclude =
	# __init__.py often contain weird code to import top-level items.
	__init__.py
extend-ignore =
	# We follow Black's guidelines here.
	# E501: line too long
	# E203: whitespace before ':'
	# E302: expected 2 blank lines, found 1
	E501
	E203
	E302

	# Do not use lambda expressions. (OK when used sparringly.)
	E731

	# Too many leading '#' for block comment.
	# We use more '#' terms at times to improve visual delimiters of long block comments.
	E266

	# Implementation is too complex.
	# (Sometimes necessary in scientific code.)
	C901
